{"version":3,"file":"static/js/134.914198e8.chunk.js","mappings":"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","sources":["components/FilmCollectionItem/FilmCollectionItem.styled.jsx","components/FilmCollectionItem/FilmCollectionItem.jsx","components/FilmCollection/FilmCollection.styled.js","components/FilmCollection/FilmCollection.jsx","hooks/useFetch.js","pages/Movies.jsx","utils/TMDBService.js"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const CollectionItem = styled.li`\r\n  &:hover {\r\n    color: orange;\r\n    scale: 1.01;\r\n  }\r\n  &:focus {\r\n    color: orange;\r\n    scale: 1.01;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { CollectionItem } from './FilmCollectionItem.styled';\n\nfunction FilmCollectionItem({ movie }) {\n  const location = useLocation();\n  if (!movie) {\n    return null;\n  }\n\n  const title = movie.name ?? movie.title;\n\n  return (\n    <CollectionItem>\n      <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n        {title}\n      </Link>\n    </CollectionItem>\n  );\n}\n\nFilmCollectionItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string,\n    title: PropTypes.string,\n  }),\n};\n\nexport default FilmCollectionItem;\n","import styled from '@emotion/styled';\n\nexport const FilmCollectionList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n","import PropTypes from 'prop-types';\nimport Loader from 'components/Loader/Loader';\nimport FilmCollectionItem from '../FilmCollectionItem';\nimport { FilmCollectionList } from './FilmCollection.styled';\n\nfunction FilmCollection({ error, isFetching, movies }) {\n  return (\n    <div>\n      {isFetching ? (\n        <Loader open={true} />\n      ) : (\n        <FilmCollectionList>\n          {movies && movies.length > 0 ? (\n            movies.map(movie => (\n              <FilmCollectionItem\n                key={movie.id}\n                movie={movie}\n                error={error}\n                isFetching={isFetching}\n              />\n            ))\n          ) : (\n            <p>No movies available.</p>\n          )}\n        </FilmCollectionList>\n      )}\n    </div>\n  );\n}\n\nFilmCollection.propTypes = {\n  error: PropTypes.string,\n  isFetching: PropTypes.bool.isRequired,\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default FilmCollection;\n","import { useCallback, useState } from 'react';\r\n\r\nexport const useFetch = () => {\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  const [data, setData] = useState(null);\r\n  const [error, setError] = useState('');\r\n\r\n  const fetchData = useCallback(async requestFunction => {\r\n    setIsFetching(true);\r\n    try {\r\n      const data = await requestFunction;\r\n\r\n      setData(data);\r\n    } catch (e) {\r\n      setError(e);\r\n    } finally {\r\n      setIsFetching(false);\r\n    }\r\n  }, []);\r\n\r\n  return { isFetching, data, error, fetchData };\r\n};\r\n","import { useSearchParams } from 'react-router-dom';\r\n\r\nimport { useFetch } from 'hooks/useFetch';\r\nimport tmdbService from 'utils/TMDBService';\r\nimport FilmCollection from 'components/FilmCollection';\r\nimport { useEffect } from 'react';\r\n\r\nfunction Movies() {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const query = searchParams.get('query') ?? '';\r\n\r\n  const { isFetching, data: moviesList, error, fetchData } = useFetch();\r\n\r\n  useEffect(() => {\r\n    if (query) {\r\n      fetchData(tmdbService.searchMovies(query));\r\n    }\r\n  }, [query, fetchData]);\r\n\r\n  const handleSearchSubmit = e => {\r\n    e.preventDefault();\r\n    const form = e.target;\r\n    const searchInput = form.elements.query;\r\n    const newQuery = searchInput.value;\r\n    if (!newQuery) {\r\n      return;\r\n    }\r\n    setSearchParams({ query: newQuery });\r\n    form.reset();\r\n  };\r\n\r\n  const movies = moviesList?.results;\r\n\r\n  return (\r\n    <section>\r\n      <form onSubmit={handleSearchSubmit}>\r\n        <label htmlFor=\"searchInput\">Search:</label>\r\n        <input\r\n          name=\"query\"\r\n          type=\"text\"\r\n          id=\"searchInput\"\r\n          placeholder=\"Enter a search term\"\r\n          autoComplete=\"off\"\r\n        />\r\n        <button type=\"submit\">Search</button>\r\n      </form>\r\n      <FilmCollection error={error} isFetching={isFetching} movies={movies} />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Movies;\r\n","import axios from 'axios';\r\n\r\nconst API_KEY = 'aa1de53af4f58d0982608e428ee96b57';\r\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w300/';\r\n\r\nclass TMDBService {\r\n  constructor() {\r\n    this.axiosInstance = axios.create({\r\n      baseURL: 'https://api.themoviedb.org/3',\r\n      params: {\r\n        api_key: API_KEY,\r\n      },\r\n    });\r\n  }\r\n\r\n  async getTrendingMovies(timeWindow = 'day') {\r\n    try {\r\n      const response = await this.axiosInstance.get(\r\n        `/trending/all/${timeWindow}`\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Помилка при отриманні списку популярних фільмів ', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async searchMovies(query) {\r\n    try {\r\n      const response = await this.axiosInstance.get('/search/movie', {\r\n        params: {\r\n          query: query,\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Помилка при пошуку фільму', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getMovieDetails(movieId) {\r\n    try {\r\n      const response = await this.axiosInstance.get(`/movie/${movieId}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Помилка під час отримання додаткової інформації', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getMovieImage(imagePath) {\r\n    try {\r\n      const fullImgUrl = `${IMAGE_BASE_URL}${imagePath}`;\r\n      const response = await axios.get(fullImgUrl, { responseType: 'blob' });\r\n      return URL.createObjectURL(response.data);\r\n    } catch (error) {\r\n      console.error('Помилка під час завантаження зображення', error);\r\n    }\r\n  }\r\n\r\n  async getMovieCredits(movieId) {\r\n    try {\r\n      const response = await this.axiosInstance.get(\r\n        `/movie/${movieId}/credits`\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Помилка при отриманні акторського складу:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getMovieReviews(movieId) {\r\n    try {\r\n      const response = await this.axiosInstance.get(\r\n        `/movie/${movieId}/reviews`\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Помилка при отриманні відгуків про фільм:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default new TMDBService();\r\n"],"names":["CollectionItem","styled","_templateObject","_taggedTemplateLiteral","_ref","_movie$name","movie","location","useLocation","title","name","_jsx","children","Link","to","concat","id","state","from","FilmCollectionList","error","isFetching","movies","Loader","open","length","map","FilmCollectionItem","useFetch","_useState","useState","_useState2","_slicedToArray","setIsFetching","_useState3","_useState4","data","setData","_useState5","_useState6","setError","fetchData","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","requestFunction","_data","wrap","_context","prev","next","sent","t0","finish","stop","_x","apply","arguments","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","_useFetch","moviesList","useEffect","tmdbService","results","_jsxs","onSubmit","e","preventDefault","form","target","newQuery","elements","value","reset","htmlFor","type","placeholder","autoComplete","FilmCollection","TMDBService","_classCallCheck","this","axiosInstance","axios","baseURL","params","api_key","_createClass","key","_getTrendingMovies","timeWindow","response","_args","undefined","abrupt","console","_searchMovies","_callee2","_context2","_getMovieDetails","_callee3","movieId","_context3","_x2","_getMovieImage","_callee4","imagePath","fullImgUrl","_context4","responseType","URL","createObjectURL","_x3","_getMovieCredits","_callee5","_context5","_x4","_getMovieReviews","_callee6","_context6","_x5"],"sourceRoot":""}