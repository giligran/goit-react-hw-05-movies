{"version":3,"file":"static/js/884.2d51c13a.chunk.js","mappings":"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","sources":["hooks/useFetch.js","pages/MovieDetails.jsx","utils/TMDBService.js"],"sourcesContent":["import { useCallback, useState } from 'react';\r\n\r\nexport const useFetch = () => {\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  const [data, setData] = useState(null);\r\n  const [error, setError] = useState('');\r\n\r\n  const fetchData = useCallback(async requestFunction => {\r\n    setIsFetching(true);\r\n    try {\r\n      const data = await requestFunction;\r\n\r\n      setData(data);\r\n    } catch (e) {\r\n      setError(e);\r\n    } finally {\r\n      setIsFetching(false);\r\n    }\r\n  }, []);\r\n\r\n  return { isFetching, data, error, fetchData };\r\n};\r\n","import { NavLink, Outlet, useLocation, useParams } from 'react-router-dom';\r\nimport { useState, useEffect, Suspense, useRef } from 'react';\r\nimport { useFetch } from 'hooks/useFetch';\r\nimport tmdbService from 'utils/TMDBService';\r\nimport styled from '@emotion/styled';\r\n\r\nconst Section = styled.section`\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n  border-bottom: 1px solid var(--cornflower, #e7e9fc);\r\n`;\r\n\r\nconst DetailsWap = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst Thumb = styled.div`\r\n  min-width: 300px;\r\n`;\r\n\r\nconst MovieInfo = styled.div`\r\n  padding: 0 32px;\r\n`;\r\n\r\nconst DetailsList = styled.ul`\r\n  display: felex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 40px;\r\n`;\r\n\r\nconst StyledLink = styled(NavLink)`\r\n  font-size: 20px;\r\n  display: inline-block;\r\n  color: #2e2f42;\r\n  font-weight: 500;\r\n  line-height: 1.5;\r\n  letter-spacing: 0.32px;\r\n  &.active {\r\n    color: orange;\r\n  }\r\n`;\r\n\r\nfunction MovieDetails() {\r\n  const location = useLocation();\r\n  const backLinkHref = useRef(location.state?.from ?? '/movies');\r\n\r\n  const { movieId } = useParams();\r\n  const [imageURL, setImageURL] = useState(null);\r\n  const { isFetching, data: movieDetails, error, fetchData } = useFetch();\r\n\r\n  useEffect(() => {\r\n    fetchData(tmdbService.getMovieDetails(movieId));\r\n  }, [fetchData, movieId]);\r\n\r\n  useEffect(() => {\r\n    const fetchImage = async () => {\r\n      if (!movieDetails) {\r\n        return;\r\n      }\r\n      try {\r\n        const url = await tmdbService.getMovieImage(movieDetails.backdrop_path);\r\n        setImageURL(url);\r\n      } catch (error) {\r\n        console.error('Ошибка при загрузке изображения:', error);\r\n      }\r\n    };\r\n\r\n    fetchImage();\r\n    return () => {\r\n      if (imageURL) {\r\n        URL.revokeObjectURL(imageURL);\r\n      }\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [movieDetails, movieId]);\r\n\r\n  if (isFetching || movieDetails === null) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p>Error: {error}</p>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Section>\r\n        <StyledLink to={backLinkHref.current} aria-label=\"Back to movies\">\r\n          back\r\n        </StyledLink>\r\n        <DetailsWap>\r\n          <Thumb>\r\n            <img src={imageURL} alt=\"\" />\r\n          </Thumb>\r\n          <MovieInfo>\r\n            <h2>{movieDetails.original_title}</h2>\r\n            <p>{movieDetails.overview}</p>\r\n            <h3>Genres</h3>\r\n            <ul>\r\n              {movieDetails.genres.map(genre => (\r\n                <li key={genre.id}>{genre.name}</li>\r\n              ))}\r\n            </ul>\r\n          </MovieInfo>\r\n        </DetailsWap>\r\n      </Section>\r\n      <Section>\r\n        <DetailsList>\r\n          <li>\r\n            <StyledLink to=\"cast\">cast</StyledLink>\r\n          </li>\r\n          <li>\r\n            <StyledLink to=\"reviews\">reviews</StyledLink>\r\n          </li>\r\n        </DetailsList>\r\n        <Suspense>\r\n          <Outlet />\r\n        </Suspense>\r\n      </Section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MovieDetails;\r\n","import axios from 'axios';\r\n\r\nconst API_KEY = 'aa1de53af4f58d0982608e428ee96b57';\r\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w300/';\r\n\r\nclass TMDBService {\r\n  constructor() {\r\n    this.axiosInstance = axios.create({\r\n      baseURL: 'https://api.themoviedb.org/3',\r\n      params: {\r\n        api_key: API_KEY,\r\n      },\r\n    });\r\n  }\r\n\r\n  async getTrendingMovies(timeWindow = 'day') {\r\n    try {\r\n      const response = await this.axiosInstance.get(\r\n        `/trending/all/${timeWindow}`\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Помилка при отриманні списку популярних фільмів ', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async searchMovies(query) {\r\n    try {\r\n      const response = await this.axiosInstance.get('/search/movie', {\r\n        params: {\r\n          query: query,\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Помилка при пошуку фільму', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getMovieDetails(movieId) {\r\n    try {\r\n      const response = await this.axiosInstance.get(`/movie/${movieId}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Помилка під час отримання додаткової інформації', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getMovieImage(imagePath) {\r\n    try {\r\n      const fullImgUrl = `${IMAGE_BASE_URL}${imagePath}`;\r\n      const response = await axios.get(fullImgUrl, { responseType: 'blob' });\r\n      return URL.createObjectURL(response.data);\r\n    } catch (error) {\r\n      console.error('Помилка під час завантаження зображення', error);\r\n    }\r\n  }\r\n\r\n  async getMovieCredits(movieId) {\r\n    try {\r\n      const response = await this.axiosInstance.get(\r\n        `/movie/${movieId}/credits`\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Помилка при отриманні акторського складу:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getMovieReviews(movieId) {\r\n    try {\r\n      const response = await this.axiosInstance.get(\r\n        `/movie/${movieId}/reviews`\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Помилка при отриманні відгуків про фільм:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default new TMDBService();\r\n"],"names":["useFetch","_useState","useState","_useState2","_slicedToArray","isFetching","setIsFetching","_useState3","_useState4","data","setData","_useState5","_useState6","error","setError","fetchData","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","requestFunction","_data","wrap","_context","prev","next","sent","t0","finish","stop","_x","apply","arguments","Section","styled","_templateObject","_taggedTemplateLiteral","DetailsWap","_templateObject2","Thumb","_templateObject3","MovieInfo","_templateObject4","DetailsList","_templateObject5","StyledLink","NavLink","_templateObject6","_location$state$from","_location$state","location","useLocation","backLinkHref","useRef","state","from","movieId","useParams","imageURL","setImageURL","_useFetch","movieDetails","useEffect","tmdbService","fetchImage","url","abrupt","backdrop_path","console","URL","revokeObjectURL","_jsx","children","_jsxs","_Fragment","to","current","src","alt","original_title","overview","genres","map","genre","name","id","Suspense","Outlet","TMDBService","_classCallCheck","this","axiosInstance","axios","baseURL","params","api_key","_createClass","key","value","_getTrendingMovies","timeWindow","response","_args","length","undefined","get","concat","_searchMovies","_callee2","query","_context2","_getMovieDetails","_callee3","_context3","_x2","_getMovieImage","_callee4","imagePath","fullImgUrl","_context4","responseType","createObjectURL","_x3","_getMovieCredits","_callee5","_context5","_x4","_getMovieReviews","_callee6","_context6","_x5"],"sourceRoot":""}