{"version":3,"file":"static/js/415.06d01656.chunk.js","mappings":"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","sources":["components/FilmCollectionItem/FilmCollectionItem.styled.jsx","components/FilmCollectionItem/FilmCollectionItem.jsx","components/FilmCollection/FilmCollection.styled.js","components/FilmCollection/FilmCollection.jsx","hooks/useFetch.js","pages/Home.jsx","utils/TMDBService.js"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const CollectionItem = styled.li`\r\n  &:hover {\r\n    color: orange;\r\n    scale: 1.01;\r\n  }\r\n  &:focus {\r\n    color: orange;\r\n    scale: 1.01;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { CollectionItem } from './FilmCollectionItem.styled';\n\nfunction FilmCollectionItem({ movie }) {\n  const location = useLocation();\n  if (!movie) {\n    return null;\n  }\n\n  const title = movie.name ?? movie.title;\n\n  return (\n    <CollectionItem>\n      <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n        {title}\n      </Link>\n    </CollectionItem>\n  );\n}\n\nFilmCollectionItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string,\n    title: PropTypes.string,\n  }),\n};\n\nexport default FilmCollectionItem;\n","import styled from '@emotion/styled';\n\nexport const FilmCollectionList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n","import PropTypes from 'prop-types';\nimport Loader from 'components/Loader/Loader';\nimport FilmCollectionItem from '../FilmCollectionItem';\nimport { FilmCollectionList } from './FilmCollection.styled';\n\nfunction FilmCollection({ error, isFetching, movies }) {\n  return (\n    <div>\n      {isFetching ? (\n        <Loader open={true} />\n      ) : (\n        <FilmCollectionList>\n          {movies && movies.length > 0 ? (\n            movies.map(movie => (\n              <FilmCollectionItem\n                key={movie.id}\n                movie={movie}\n                error={error}\n                isFetching={isFetching}\n              />\n            ))\n          ) : (\n            <p>No movies available.</p>\n          )}\n        </FilmCollectionList>\n      )}\n    </div>\n  );\n}\n\nFilmCollection.propTypes = {\n  error: PropTypes.string,\n  isFetching: PropTypes.bool.isRequired,\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default FilmCollection;\n","import { useCallback, useState } from 'react';\r\n\r\nexport const useFetch = () => {\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  const [data, setData] = useState(null);\r\n  const [error, setError] = useState('');\r\n\r\n  const fetchData = useCallback(async requestFunction => {\r\n    setIsFetching(true);\r\n    try {\r\n      const data = await requestFunction;\r\n\r\n      setData(data);\r\n    } catch (e) {\r\n      setError(e);\r\n    } finally {\r\n      setIsFetching(false);\r\n    }\r\n  }, []);\r\n\r\n  return { isFetching, data, error, fetchData };\r\n};\r\n","import { useEffect } from 'react';\r\nimport tmdbService from 'utils/TMDBService';\r\nimport { useFetch } from 'hooks/useFetch';\r\nimport FilmCollection from 'components/FilmCollection';\r\nfunction Home() {\r\n  const { isFetching, data, error, fetchData } = useFetch();\r\n\r\n  useEffect(() => {\r\n    fetchData(tmdbService.getTrendingMovies('week'));\r\n  }, [fetchData]);\r\n\r\n  const movies = data?.results;\r\n\r\n  return (\r\n    <section style={{ paddingTop: '32px' }}>\r\n      <h1 style={{ marginBottom: '32px' }}>Trending today</h1>\r\n      <FilmCollection error={error} isFetching={isFetching} movies={movies} />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import axios from 'axios';\r\n\r\nconst API_KEY = 'aa1de53af4f58d0982608e428ee96b57';\r\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w300/';\r\n\r\nclass TMDBService {\r\n  constructor() {\r\n    this.axiosInstance = axios.create({\r\n      baseURL: 'https://api.themoviedb.org/3',\r\n      params: {\r\n        api_key: API_KEY,\r\n      },\r\n    });\r\n  }\r\n\r\n  async getTrendingMovies(timeWindow = 'day') {\r\n    try {\r\n      const response = await this.axiosInstance.get(\r\n        `/trending/all/${timeWindow}`\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Помилка при отриманні списку популярних фільмів ', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async searchMovies(query) {\r\n    try {\r\n      const response = await this.axiosInstance.get('/search/movie', {\r\n        params: {\r\n          query: query,\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Помилка при пошуку фільму', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getMovieDetails(movieId) {\r\n    try {\r\n      const response = await this.axiosInstance.get(`/movie/${movieId}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Помилка під час отримання додаткової інформації', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getMovieImage(imagePath) {\r\n    try {\r\n      const fullImgUrl = `${IMAGE_BASE_URL}${imagePath}`;\r\n      const response = await axios.get(fullImgUrl, { responseType: 'blob' });\r\n      return URL.createObjectURL(response.data);\r\n    } catch (error) {\r\n      console.error('Помилка під час завантаження зображення', error);\r\n    }\r\n  }\r\n\r\n  async getMovieCredits(movieId) {\r\n    try {\r\n      const response = await this.axiosInstance.get(\r\n        `/movie/${movieId}/credits`\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Помилка при отриманні акторського складу:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getMovieReviews(movieId) {\r\n    try {\r\n      const response = await this.axiosInstance.get(\r\n        `/movie/${movieId}/reviews`\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Помилка при отриманні відгуків про фільм:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default new TMDBService();\r\n"],"names":["CollectionItem","styled","_templateObject","_taggedTemplateLiteral","_ref","_movie$name","movie","location","useLocation","title","name","_jsx","children","Link","to","concat","id","state","from","FilmCollectionList","error","isFetching","movies","Loader","open","length","map","FilmCollectionItem","useFetch","_useState","useState","_useState2","_slicedToArray","setIsFetching","_useState3","_useState4","data","setData","_useState5","_useState6","setError","fetchData","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","requestFunction","_data","wrap","_context","prev","next","sent","t0","finish","stop","_x","apply","arguments","_useFetch","useEffect","tmdbService","results","_jsxs","style","paddingTop","marginBottom","FilmCollection","TMDBService","_classCallCheck","this","axiosInstance","axios","baseURL","params","api_key","_createClass","key","value","_getTrendingMovies","timeWindow","response","_args","undefined","get","abrupt","console","_searchMovies","_callee2","query","_context2","_getMovieDetails","_callee3","movieId","_context3","_x2","_getMovieImage","_callee4","imagePath","fullImgUrl","_context4","responseType","URL","createObjectURL","_x3","_getMovieCredits","_callee5","_context5","_x4","_getMovieReviews","_callee6","_context6","_x5"],"sourceRoot":""}