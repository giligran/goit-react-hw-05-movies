{"version":3,"file":"static/js/884.e90f1d6a.chunk.js","mappings":"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","sources":["hooks/useFetch.js","pages/MovieDetails.jsx","utils/TMDBService.js"],"sourcesContent":["import { useCallback, useState } from 'react';\r\n\r\nexport const useFetch = () => {\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  const [data, setData] = useState(null);\r\n  const [error, setError] = useState('');\r\n\r\n  const fetchData = useCallback(async requestFunction => {\r\n    setIsFetching(true);\r\n    try {\r\n      const data = await requestFunction;\r\n\r\n      setData(data);\r\n    } catch (e) {\r\n      setError(e);\r\n    } finally {\r\n      setIsFetching(false);\r\n    }\r\n  }, []);\r\n\r\n  return { isFetching, data, error, fetchData };\r\n};\r\n","import { Link, Outlet, useLocation, useParams } from 'react-router-dom';\r\nimport { useState, useEffect, Suspense } from 'react';\r\nimport { useFetch } from 'hooks/useFetch';\r\nimport tmdbService from 'utils/TMDBService';\r\n\r\nfunction MovieDetails() {\r\n  const location = useLocation();\r\n  const backLinkHref = location.state?.from ?? '/movies';\r\n\r\n  const { movieId } = useParams();\r\n  const [imageURL, setImageURL] = useState(null);\r\n  const { isFetching, data: movieDetails, error, fetchData } = useFetch();\r\n\r\n  useEffect(() => {\r\n    fetchData(tmdbService.getMovieDetails(movieId));\r\n  }, [fetchData, movieId]);\r\n\r\n  useEffect(() => {\r\n    const fetchImage = async () => {\r\n      if (!movieDetails) {\r\n        return;\r\n      }\r\n      try {\r\n        const url = await tmdbService.getMovieImage(movieDetails.backdrop_path);\r\n        setImageURL(url);\r\n      } catch (error) {\r\n        console.error('Ошибка при загрузке изображения:', error);\r\n      }\r\n    };\r\n\r\n    fetchImage();\r\n    return () => {\r\n      if (imageURL) {\r\n        URL.revokeObjectURL(imageURL);\r\n      }\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [movieDetails, movieId]);\r\n\r\n  if (isFetching || movieDetails === null) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p>Error: {error}</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Link to={backLinkHref} aria-label=\"Back to movies\">\r\n        back\r\n      </Link>\r\n      <div>\r\n        <img src={imageURL} alt=\"\" />\r\n        <h2>{movieDetails.original_title}</h2>\r\n        <p>{movieDetails.overview}</p>\r\n        <h3>Genres</h3>\r\n        <ul>\r\n          {movieDetails.genres.map(genre => (\r\n            <li key={genre.id}>{genre.name}</li>\r\n          ))}\r\n        </ul>\r\n        <ul>\r\n          <li>\r\n            <Link to=\"cast\">cast</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"reviews\">reviews</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <Suspense>\r\n        <Outlet />\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieDetails;\r\n","import axios from 'axios';\r\n\r\nconst API_KEY = 'aa1de53af4f58d0982608e428ee96b57';\r\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w300/';\r\n\r\nclass TMDBService {\r\n  constructor() {\r\n    this.axiosInstance = axios.create({\r\n      baseURL: 'https://api.themoviedb.org/3',\r\n      params: {\r\n        api_key: API_KEY,\r\n      },\r\n    });\r\n  }\r\n\r\n  async getTrendingMovies(timeWindow = 'day') {\r\n    try {\r\n      const response = await this.axiosInstance.get(\r\n        `/trending/all/${timeWindow}`\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Помилка при отриманні списку популярних фільмів ', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async searchMovies(query) {\r\n    try {\r\n      const response = await this.axiosInstance.get('/search/movie', {\r\n        params: {\r\n          query: query,\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Помилка при пошуку фільму', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getMovieDetails(movieId) {\r\n    try {\r\n      const response = await this.axiosInstance.get(`/movie/${movieId}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Помилка під час отримання додаткової інформації', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getMovieImage(imagePath) {\r\n    try {\r\n      const fullImgUrl = `${IMAGE_BASE_URL}${imagePath}`;\r\n      const response = await axios.get(fullImgUrl, { responseType: 'blob' });\r\n      return URL.createObjectURL(response.data);\r\n    } catch (error) {\r\n      console.error('Помилка під час завантаження зображення', error);\r\n    }\r\n  }\r\n\r\n  async getMovieCredits(movieId) {\r\n    try {\r\n      const response = await this.axiosInstance.get(\r\n        `/movie/${movieId}/credits`\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Помилка при отриманні акторського складу:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getMovieReviews(movieId) {\r\n    try {\r\n      const response = await this.axiosInstance.get(\r\n        `/movie/${movieId}/reviews`\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Помилка при отриманні відгуків про фільм:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default new TMDBService();\r\n"],"names":["useFetch","_useState","useState","_useState2","_slicedToArray","isFetching","setIsFetching","_useState3","_useState4","data","setData","_useState5","_useState6","error","setError","fetchData","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","requestFunction","_data","wrap","_context","prev","next","sent","t0","finish","stop","_x","apply","arguments","_location$state$from","_location$state","backLinkHref","useLocation","state","from","movieId","useParams","imageURL","setImageURL","_useFetch","movieDetails","useEffect","tmdbService","fetchImage","url","abrupt","backdrop_path","console","URL","revokeObjectURL","_jsx","children","_jsxs","Link","to","src","alt","original_title","overview","genres","map","genre","name","id","Suspense","Outlet","TMDBService","_classCallCheck","this","axiosInstance","axios","baseURL","params","api_key","_createClass","key","value","_getTrendingMovies","timeWindow","response","_args","length","undefined","get","concat","_searchMovies","_callee2","query","_context2","_getMovieDetails","_callee3","_context3","_x2","_getMovieImage","_callee4","imagePath","fullImgUrl","_context4","responseType","createObjectURL","_x3","_getMovieCredits","_callee5","_context5","_x4","_getMovieReviews","_callee6","_context6","_x5"],"sourceRoot":""}